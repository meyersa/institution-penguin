# Builds the container and runs cypress tests 
name: Build docker container
on:
  pull_request:
jobs:
  check-traefik:
    runs-on: self-hosted
    steps:

      # CLI to check running container
    - name: Check Traefik
      id: check_container
      run: |
        if docker ps --format '{{.Names}}' | grep -q '^ip-dev-traefik$'; then
          echo "Traefik container is already running."
          echo "::set-output name=running::true"
        else
          echo "Traefik container is not running."
          echo "::set-output name=running::false"
        fi

    # Only if Traefik isn't running, pull code
    - name: Checkout code
      if: steps.check_container.outputs.running == 'false'
      uses: actions/checkout@v4
    
    # Only if Traefik isn't running, start Traefik
    - name: Start Traefik
      if: steps.check_container.outputs.running == 'false'
      run: |
        docker-compose --file docker-compose.traefik.yml up -d

  deploy-app: 
    needs: check-traefik
    runs-on: self-hosted 
    environment: Dev
    steps: 
        
      # Storage cleanup workaround
      - name: Clean up GitHub workspace
        uses: docker://ubuntu:latest
        with:
          args: find /github/workspace/. -name . -o -prune -exec rm -rf -- {} +

      - name: Check out code 
        uses: actions/checkout@v4
        
      - name: Set environmental variables
        run: |
          echo "AUTH_ID=${{ secrets.AUTH_ID }}" >> .env
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "IP_URL=${{ secrets.IP_URL }}" >> .env
          echo "MONGODB_URL=mongodb://${{ secrets.MONGO_INITDB_ROOT_USERNAME }}:${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}@dev-${{ github.run_number }}-ip" >> .env
          echo "MONGODB_DB=${{ secrets.MONGODB_DB }}" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "GITHUB_BRANCH=${{ github.run_number }}" >> .env
          
      # Add back --build when done testing
      - name: Build docker containers
        run: |
          docker compose --profile db --file docker-compose.dev.yaml up -d 
          docker compose --profile ip --file docker-compose.dev.yaml up -d

  cypress-test:
    needs: deploy-app
    runs-on: self-hosted
    container: 
      image: cypress/browsers:latest

    steps: 
      - name: Run cypress tests 
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          start: yarn start
          wait-on: "http://dev-${GITHUB_BRANCH}.localhost:80"
        