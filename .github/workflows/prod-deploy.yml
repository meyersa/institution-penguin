# Deploys main merges to prod
name: Deploy to Prod
on:
  push: 
    branches: 
      - main
jobs:
  build-deploy:

    # Runs on d3 runner
    runs-on: self-hosted
    environment: Prod
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Or else values do not get updated
      - name: Clean Env 
        run: |
          echo "test" >> .env
          rm .env 

      # Set ENV in .env
      - name: Set environmental variables
        run: |
          echo "GH_CLIENT_ID=${{ secrets.GH_CLIENT_ID }}" >> .env
          echo "GH_CLIENT_SECRET=${{ secrets.GH_CLIENT_SECRET }}" >> .env
          echo "DISCORD_CLIENT_ID=${{ secrets.DISCORD_CLIENT_ID }}" >> .env
          echo "DISCORD_CLIENT_SECRET=${{ secrets.DISCORD_CLIENT_SECRET }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
          echo "MONGODB_URL=mongodb://${{ secrets.MONGO_INITDB_ROOT_USERNAME }}:${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}@prod-ip-db/" >> .env
          echo "MONGODB_DB=${{ secrets.MONGODB_DB }}" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env

      - name: Prebuild IP
        run: docker compose --profile ip --file docker-compose.prod.yaml build 

      - name: Confirm no running containers
        run: docker compose --profile all --file docker-compose.prod.yaml down 

      # Pull back up
      - name: Deploy docker
        run: |
          docker compose --profile db --file docker-compose.prod.yaml up -d
          docker compose --profile ip --file docker-compose.prod.yaml up -d 
        
      # Second storage cleanup workaround
      - name: Clean-up docker
        run: docker system prune -f
